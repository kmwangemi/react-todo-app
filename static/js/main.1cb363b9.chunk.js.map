{"version":3,"sources":["ListItems.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","listItems","items","map","item","className","type","name","id","key","value","text","onChange","e","setUpdate","target","icon","onClick","deleteItem","duration","easing","library","add","faTrash","App","handleInput","setState","currentItem","Date","now","addItem","preventDefault","newItem","state","console","log","newItems","filteredItems","filter","this","onSubmit","placeholder","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSA8CeA,MAzCf,SAAmBC,GAChB,IACMC,EADQD,EAAME,MACIC,KAAI,SAAAC,GACzB,OAAO,qBAAKC,UAAU,OAAf,SAUJ,8BACG,uBACGC,KAAK,OACLC,KAAK,OACLC,GAAIJ,EAAKK,IACTC,MAAON,EAAKO,KACZC,SAAU,SAACC,GAAOb,EAAMc,UAAUD,EAAEE,OAAOL,MAAON,EAAKK,QAE1D,+BACG,cAAC,IAAD,CACGJ,UAAU,UACVW,KAAK,QACLC,QAAS,kBAAMjB,EAAMkB,WAAWd,EAAKK,cAtBfL,EAAKK,QA6B1C,OACG,8BACG,cAAC,IAAD,CAAUU,SAAU,IAAKC,OAAO,cAAhC,SACInB,O,eClCboB,IAAQC,IAAIC,K,IAuFGC,E,kDApFZ,WAAYxB,GAAQ,IAAD,8BAChB,cAAMA,IAWTyB,YAAc,SAAAZ,GACX,EAAKa,SAAS,CACXC,YAAa,CACVhB,KAAME,EAAEE,OAAOL,MACfD,IAAKmB,KAAKC,UAhBA,EAqBnBC,QAAU,SAAAjB,GACPA,EAAEkB,iBACF,IAAMC,EAAU,EAAKC,MAAMN,YAE3B,GADAO,QAAQC,IAAIH,GACS,KAAjBA,EAAQrB,KAAa,CACtB,IAAMyB,EAAQ,sBAAO,EAAKH,MAAM/B,OAAlB,CAAyB8B,IAEvC,EAAKN,SAAS,CACXxB,MAAOkC,EACPT,YAAa,CACVhB,KAAM,GACNF,IAAK,MAGXyB,QAAQC,IAAI,oBAAqBC,KAnCpB,EAuCnBlB,WAAa,SAAAT,GACV,IAAM4B,EAAgB,EAAKJ,MAAM/B,MAAMoC,QAAO,SAAAlC,GAAI,OAAIA,EAAKK,MAAQA,KACnE,EAAKiB,SAAS,CACXxB,MAAOmC,IAEVH,QAAQC,IAAI,mBAAoBE,IA5ChB,EA+CnBvB,UAAY,SAACH,EAAMF,GAChB,IAAMP,EAAQ,EAAK+B,MAAM/B,MACzBA,EAAMC,KAAI,SAAAC,GACHA,EAAKK,MAAQA,IACdL,EAAKO,KAAOA,MAGlB,EAAKe,SAAS,CACXxB,MAAOA,KApDV,EAAK+B,MAAQ,CACT/B,MAAO,GACPyB,YAAa,CACVhB,KAAM,GACNF,IAAK,KAPI,E,qDA2DT,IAAD,EACyB8B,KAAKN,MAA5B/B,EADF,EACEA,MAAOyB,EADT,EACSA,YACf,OACG,sBAAKtB,UAAU,MAAf,UACG,iCACG,uBAAMG,GAAG,aAAagC,SAAUD,KAAKT,QAArC,UACG,uBACGxB,KAAK,OACLmC,YAAY,aACZ/B,MAAOiB,EAAYhB,KACnBC,SAAU2B,KAAKd,cAElB,wBAAQnB,KAAK,SAAb,sBAGN,cAAC,EAAD,CACGJ,MAASA,EACTgB,WAAYqB,KAAKrB,WACjBJ,UAAWyB,KAAKzB,mB,GA9Eb4B,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1cb363b9.chunk.js","sourcesContent":["import React from 'react';\nimport './Listitems.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport FlipMove from 'react-flip-move';\n\nfunction ListItems(props) {\n   const items = props.items;\n   const listItems = items.map(item => {\n      return <div className=\"list\" key={item.key}>\n         {/* <p>{item.text}\n            <span>\n               <FontAwesomeIcon \n                  className=\"faicons\" \n                  icon='trash' \n                  onClick={() => props.deleteItem(item.key)}\n               />\n            </span>\n         </p> */}\n         <p>\n            <input \n               type=\"text\" \n               name=\"item\" \n               id={item.key}\n               value={item.text}\n               onChange={(e) => {props.setUpdate(e.target.value, item.key)}}\n            /> \n            <span>\n               <FontAwesomeIcon \n                  className=\"faicons\" \n                  icon='trash' \n                  onClick={() => props.deleteItem(item.key)}\n               />\n            </span>\n         </p>\n         \n      </div>\n   })\n   return (\n      <div>\n         <FlipMove duration={500} easing=\"ease-in-out\">\n            {listItems}\n         </FlipMove>\n      </div>\n   )\n}\n\nexport default ListItems;\n\n\n\n\n","import React, { Component } from 'react'\nimport './App.css';\nimport ListItems from './ListItems';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faTrash)\n\nclass App extends Component {\n   constructor(props) {\n      super(props)\n   \n      this.state = {\n          items: [],\n          currentItem: {\n             text: '',\n             key: ''\n          }\n      }\n   }\n\n   handleInput = e => {\n      this.setState({\n         currentItem: {\n            text: e.target.value,\n            key: Date.now()\n         }\n      })\n   }\n\n   addItem = e => {\n      e.preventDefault()\n      const newItem = this.state.currentItem;\n      console.log(newItem);\n      if (newItem.text !== \"\") {\n         const newItems = [...this.state.items, newItem];\n         // console.log('this are newitems', newItems);\n         this.setState({\n            items: newItems,\n            currentItem: {\n               text: \"\",\n               key: \"\"\n            }\n         })\n         console.log('this are newitems', newItems);\n      }\n   }\n\n   deleteItem = key => {\n      const filteredItems = this.state.items.filter(item => item.key !== key);\n      this.setState({\n         items: filteredItems\n      })\n      console.log('the filterd item', filteredItems)\n   }  \n\n   setUpdate = (text, key) => {\n      const items = this.state.items;\n      items.map(item => {\n         if (item.key === key) {\n            item.text = text;\n         }\n      })\n      this.setState({\n         items: items\n      })\n   }\n\n   render() {\n      const { items, currentItem } = this.state\n      return (\n         <div className=\"App\">\n            <header>\n               <form id=\"to-do-form\" onSubmit={this.addItem}>\n                  <input \n                     type=\"text\" \n                     placeholder=\"Enter Text\"\n                     value={currentItem.text}\n                     onChange={this.handleInput}\n                  />\n                  <button type=\"submit\">Add</button>\n               </form>\n            </header>\n            <ListItems \n               items = {items} \n               deleteItem={this.deleteItem}\n               setUpdate={this.setUpdate}\n            />\n         </div>\n      )\n   }\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}