[{"/home/kmwangemi/Desktop/REACT PROJECTS/todo-app/src/index.js":"1","/home/kmwangemi/Desktop/REACT PROJECTS/todo-app/src/App.js":"2","/home/kmwangemi/Desktop/REACT PROJECTS/todo-app/src/reportWebVitals.js":"3","/home/kmwangemi/Desktop/REACT PROJECTS/todo-app/src/ListItems.js":"4"},{"size":500,"mtime":1610778270460,"results":"5","hashOfConfig":"6"},{"size":2287,"mtime":1610788202369,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1610778270460,"results":"8","hashOfConfig":"6"},{"size":1263,"mtime":1610789461966,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"xyw72x",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kmwangemi/Desktop/REACT PROJECTS/todo-app/src/index.js",[],["20","21"],"/home/kmwangemi/Desktop/REACT PROJECTS/todo-app/src/App.js",["22"],"import React, { Component } from 'react'\nimport './App.css';\nimport ListItems from './ListItems';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faTrash)\n\nclass App extends Component {\n   constructor(props) {\n      super(props)\n   \n      this.state = {\n          items: [],\n          currentItem: {\n             text: '',\n             key: ''\n          }\n      }\n   }\n\n   handleInput = e => {\n      this.setState({\n         currentItem: {\n            text: e.target.value,\n            key: Date.now()\n         }\n      })\n   }\n\n   addItem = e => {\n      e.preventDefault()\n      const newItem = this.state.currentItem;\n      console.log(newItem);\n      if (newItem.text !== \"\") {\n         const newItems = [...this.state.items, newItem];\n         // console.log('this are newitems', newItems);\n         this.setState({\n            items: newItems,\n            currentItem: {\n               text: \"\",\n               key: \"\"\n            }\n         })\n         console.log('this are newitems', newItems);\n      }\n   }\n\n   deleteItem = key => {\n      const filteredItems = this.state.items.filter(item => item.key !== key);\n      this.setState({\n         items: filteredItems\n      })\n      console.log('the filterd item', filteredItems)\n   }  \n\n   setUpdate = (text, key) => {\n      const items = this.state.items;\n      items.map(item => {\n         if (item.key === key) {\n            item.text = text;\n         }\n      })\n      this.setState({\n         items: items\n      })\n   }\n\n   render() {\n      const { items, currentItem } = this.state\n      return (\n         <div className=\"App\">\n            <header>\n               <form id=\"to-do-form\" onSubmit={this.addItem}>\n                  <input \n                     type=\"text\" \n                     placeholder=\"Enter Text\"\n                     value={currentItem.text}\n                     onChange={this.handleInput}\n                  />\n                  <button type=\"submit\">Add</button>\n               </form>\n            </header>\n            <ListItems \n               items = {items} \n               deleteItem={this.deleteItem}\n               setUpdate={this.setUpdate}\n            />\n         </div>\n      )\n   }\n}\n\nexport default App\n\n","/home/kmwangemi/Desktop/REACT PROJECTS/todo-app/src/reportWebVitals.js",[],"/home/kmwangemi/Desktop/REACT PROJECTS/todo-app/src/ListItems.js",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":59,"column":22,"nodeType":"29","messageId":"30","endLine":59,"endColumn":24},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]